/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package boundary.programme;

import adt.AdtInterface;
import adt.ArrayList;
import entity.Programme;
import entity.TutorialGroup;
import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PrinterException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.*;
import utility.*;
import utility.insertData;

/**
 *
 * @author user
 */
public class programmeReportGUI extends javax.swing.JFrame {

    public static AdtInterface<Programme> programmeList = insertData.programmeList;

    public static AdtInterface<TutorialGroup> tutorialList = insertData.tutorialList;
    private final ProgrammeComparators code = new ProgrammeComparators();
    private final GroupIDComparator groupID = new GroupIDComparator();
    private final AverageAttendanceComparator groupAttendance = new AverageAttendanceComparator();

    /**
     * Creates new form programmeReportGUI
     */
    public programmeReportGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TitleLabel1 = new javax.swing.JLabel();
        sortByProgrammeIDButton = new javax.swing.JButton();
        programmeSortByTutorialGroupIDButton1 = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TitleLabel1.setBackground(new java.awt.Color(255, 255, 255));
        TitleLabel1.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        TitleLabel1.setText("Programme Report");

        sortByProgrammeIDButton.setBackground(new java.awt.Color(204, 204, 204));
        sortByProgrammeIDButton.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        sortByProgrammeIDButton.setText("<html><div style='text-align:center;'>REPORT SORT BY<br>PROGRAMME ID"
            + "</div></html>");
        sortByProgrammeIDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortByProgrammeIDButtonActionPerformed(evt);
            }
        });

        programmeSortByTutorialGroupIDButton1.setBackground(new java.awt.Color(204, 204, 204));
        programmeSortByTutorialGroupIDButton1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        programmeSortByTutorialGroupIDButton1.setText("<html><div style='text-align:center;'>REPORT SORT BY<br>TUTORIAL GROUP ID</div></html>");
        programmeSortByTutorialGroupIDButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programmeSortByTutorialGroupIDButton1ActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(TitleLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(sortByProgrammeIDButton, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(programmeSortByTutorialGroupIDButton1)
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TitleLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortByProgrammeIDButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(programmeSortByTutorialGroupIDButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private int sortingOption = -1; // Default to no sorting
    private void sortByProgrammeIDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByProgrammeIDButtonActionPerformed
        // Sort the list based on Programme Code
        ArrayList.insertionSort(programmeList, code);

        // Generate the report text
        StringBuilder report = new StringBuilder();
        for (Programme programme : programmeList) {
            report.append("Programme Code: ").append(programme.getProgrammeCode()).append("\n");
            report.append("Programme Name: ").append(programme.getProgrammeName()).append("\n");
            // Add more fields as needed
            report.append("\n");
        }

        // Create a new JFrame to display the report
        JFrame reportFrame = new JFrame("Programme Report");
        reportFrame.setSize(400, 200);
        reportFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Close only the report window when closed

        // Create a JTextArea to display the report
        JTextArea reportTextArea = new JTextArea();
        reportTextArea.setText(report.toString());
        reportTextArea.setWrapStyleWord(true);
        reportTextArea.setLineWrap(true);

        // Add the JTextArea to a JScrollPane for scrolling if needed
        JScrollPane scrollPane = new JScrollPane(reportTextArea);

        // Create a "Print" button
        JButton printButton = new JButton("Print");
        printButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Print the contents of the JTextArea
                try {
                    reportTextArea.print();
                } catch (PrinterException ex) {
                    ex.printStackTrace();
                }
            }
        });

        // Create a JPanel for the buttons
        JPanel buttonPanel = new JPanel();
        buttonPanel.add(printButton);

        // Add the scroll pane and button panel to the report frame
        reportFrame.add(scrollPane, BorderLayout.CENTER);
        reportFrame.add(buttonPanel, BorderLayout.SOUTH);
        // Set the size of the dialog (adjust as needed)
        reportFrame.setSize(400, 300);

        // Center the dialog on the screen
        reportFrame.setLocationRelativeTo(null);
        // Make the report frame visible
        reportFrame.setVisible(true);
    }//GEN-LAST:event_sortByProgrammeIDButtonActionPerformed
//private void createSortingButton(Container container, String label, int option) {
//        JButton button = new JButton(label);
//        container.add(button);
//
//        button.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                // Set the sorting option based on the button clicked
//                sortingOption = option;
//            }
//        });
//    }
    private void programmeSortByTutorialGroupIDButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programmeSortByTutorialGroupIDButton1ActionPerformed
// Sort the list based on Tutorial Group ID
        //ArrayList.insertionSort(programmeList, groupID);
// Sort programmeList
        ArrayList.insertionSort(programmeList, code);

// Create a mapping of programme IDs to their original indices
        Map<String, Integer> programmeIndexMap = new HashMap<>();
        for (int i = 0; i < programmeList.getNumberOfEntries(); i++) {
            Programme programme = programmeList.getEntry(i);if (programme != null) {
    programmeIndexMap.put(programme.getProgrammeCode(), i);
} else {
                
            }
        }

// Sort tutorialList
        ArrayList.insertionSort(tutorialList, groupAttendance);

// Rearrange tutorialList based on the sorting order of programmeList
        ArrayList<TutorialGroup> sortedTutorialList = new ArrayList<>(tutorialList.getNumberOfEntries());
        for (Programme programme : programmeList) {
            Integer originalIndex = programmeIndexMap.get(programme.getProgrammeCode());
            if (originalIndex != null && originalIndex < tutorialList.getNumberOfEntries()) {
                sortedTutorialList.add(tutorialList.getEntry(originalIndex));
            }
        }

// Now, sortedTutorialList contains TutorialGroup objects sorted by programmeList order.
        // Generate the report text
        StringBuilder report = new StringBuilder();
        for (Programme programme : programmeList) {
            report.append("Programme Code: ").append(programme.getProgrammeCode()).append("\n");
            report.append("Programme Name: ").append(programme.getProgrammeName()).append("\n");
            report.append("Tutorial Group: ").append(programme.getTutorialString()).append("\n");
            // Add more fields as needed
            report.append("\n");
        }

        // Create a new JFrame to display the sorted report
        JFrame sortedReportFrame = new JFrame("Sorted Programme Report by Tutorial Group ID");
        sortedReportFrame.setSize(400, 200);
        sortedReportFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Close only the report window when closed

        // Create a JTextArea to display the sorted report
        JTextArea sortedReportTextArea = new JTextArea();
        sortedReportTextArea.setText(report.toString());
        System.out.println(report.toString());
        sortedReportTextArea.setWrapStyleWord(true);
        sortedReportTextArea.setLineWrap(true);
        // Add the JTextArea to a JScrollPane for scrolling if needed
        JScrollPane sortedScrollPane = new JScrollPane(sortedReportTextArea);

        // Create a "Print" button for the sorted report
        JButton printButton = new JButton("Print");
        printButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Print the contents of the JTextArea
                try {
                    sortedReportTextArea.print();
                } catch (PrinterException ex) {
                    ex.printStackTrace();
                }
            }
        });

        // Create a JPanel for the buttons (e.g., the "Print" button)
        JPanel buttonPanel = new JPanel();
        buttonPanel.add(printButton);

        // Add the sorted report scroll pane and button panel to the sorted report frame
        sortedReportFrame.add(sortedScrollPane, BorderLayout.CENTER);
        sortedReportFrame.add(buttonPanel, BorderLayout.SOUTH);
        // Set the size of the dialog (adjust as needed)
        sortedReportFrame.setSize(400, 300);

        // Center the dialog on the screen
        sortedReportFrame.setLocationRelativeTo(null);    // Make the sorted report frame visible
        sortedReportFrame.setVisible(true);
    }//GEN-LAST:event_programmeSortByTutorialGroupIDButton1ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        setVisible(false);
        ProgrammeManagementMenu t = new ProgrammeManagementMenu();
        t.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(programmeReportGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(programmeReportGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(programmeReportGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(programmeReportGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new programmeReportGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TitleLabel1;
    private javax.swing.JButton backButton;
    private javax.swing.JButton programmeSortByTutorialGroupIDButton1;
    private javax.swing.JButton sortByProgrammeIDButton;
    // End of variables declaration//GEN-END:variables
}
