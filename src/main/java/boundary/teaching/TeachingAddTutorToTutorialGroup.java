/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package boundary.teaching;

import adt.AdtInterface;
import entity.*;
import javax.swing.DefaultComboBoxModel;
import utility.insertData;

/**
 *
 * @author User
 */
public class TeachingAddTutorToTutorialGroup extends javax.swing.JFrame {

    public static AdtInterface<Tutor> tutorList = insertData.tutorList;
    public static AdtInterface<TutorialGroup> tutorialList = insertData.tutorialList;
    public static AdtInterface<Teaching> teachingList = insertData.teachingList;

    public TeachingAddTutorToTutorialGroup() {
        initComponents();
        setupCourseComboBox(); // Call the method to set up the combobox

    }

    private void setupCourseComboBox() {
        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();

        for (int i = 1; i <= tutorList.getNumberOfEntries(); i++) {
            System.out.println("id :" + tutorList.getEntry(i).getTutorID());
            comboBoxModel.addElement(tutorList.getEntry(i).getTutorID());
        }
        Jcombo.setModel(comboBoxModel); // Set the model for the JComboBox

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TitleLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        ConfirmButton = new javax.swing.JButton();
        jtfCourseID = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        errorMsg = new javax.swing.JLabel();
        errorMsg1 = new javax.swing.JLabel();
        msg = new javax.swing.JLabel();
        Jcombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1500, 800));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TitleLabel.setBackground(new java.awt.Color(255, 255, 255));
        TitleLabel.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        TitleLabel.setText("Teaching Add Tutor To TutorialGroup");
        jPanel1.add(TitleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("TutorialGroup ID :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 230, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel3.setText("ADD Tutor :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, 180, 50));

        backButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 700, -1, -1));

        ConfirmButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ConfirmButton.setText("Confirm");
        ConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmButtonActionPerformed(evt);
            }
        });
        jPanel1.add(ConfirmButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 700, 150, -1));

        jtfCourseID.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jtfCourseID.setToolTipText("");
        jtfCourseID.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jtfCourseID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCourseIDActionPerformed(evt);
            }
        });
        jPanel1.add(jtfCourseID, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, 340, 40));

        searchButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchButton.setText("SEARCH");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 180, 100, 40));
        jPanel1.add(errorMsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 220, 340, 20));
        jPanel1.add(errorMsg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 340, 20));
        jPanel1.add(msg, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 740, 270, 30));

        Jcombo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Jcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Jcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcomboActionPerformed(evt);
            }
        });
        jPanel1.add(Jcombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 300, 720, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        setVisible(false);
        TeachingManagement t = new TeachingManagement();
        t.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void ConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmButtonActionPerformed
        String selectedTutors = Jcombo.getSelectedItem().toString(); // Get the selected Tutor name from the combo box
        String courseID = jtfCourseID.getText();

        System.out.println("selectedTutors : " + selectedTutors);
        System.out.println("courseID : " + courseID);

        //Teaching t = new Teaching(selectedTutors, courseID, "");
        //teachingList.add(t);

        System.out.println("tutor id : " + teachingList.getEntry(1).getCourseID());
        
        if (selectedTutors != null && courseID != null) {
        // Create a Teaching object and add it to the list of teachings
       Teaching t = new Teaching(selectedTutors, courseID, "");

        // Add the teaching to your teachingList
        teachingList.add(t);
        System.out.println("t:" +t);

        // You can display a success message here or perform any other actions
        msg.setText("Tutor has been assigned to the course successfully.");
    } else {
        // Tutor or course not found
        msg.setText("Tutor or course not found.");
    }
        

//        if (!selectedTutors.isEmpty()) {
//
//            if (!courseID.isEmpty()) {
//                errorMsg.setText(""); // Clear any previous error messages
//
//                for (int i = 0; i < courseList.getNumberOfEntries(); i++) {
//                    if (courseID.equals(courseList.getEntry(i + 1).getCourseID())) {
//
//                        // Find the tutor and add the selected Course to it
//                        Tutor selected = null;
//                        for (int j = 1; j <= tutorList.getNumberOfEntries(); j++) {
//                            Tutor tutor = tutorList.getEntry(j);
//                            if (selectedTutors.equals(tutor.getTutorID())) {
//                                //selectedTutors = tutor;
//                                System.out.println("selectedTutor: " + selectedTutors); // selectedTutor: Kenneth 
//                                break;
//                            }
//                        }
//                        //Check
//                        if (selected != null) {
//                            courseList.getEntry(i + 1).addTutor(selectedTutors);
//                            System.out.println("hahah:" + courseList.getEntry(i + 1).getTutors());
//                            msg.setText("Tutor has added to the course successfully.");
//                        }
//                        break; // Exit the loop since the course is found
//                    }
//                }
//            } else {
//                errorMsg.setText("Please enter a course ID");
//            }
//        } else {
//            errorMsg.setText("Please select a Course");
//        }
    }//GEN-LAST:event_ConfirmButtonActionPerformed

    private void jtfCourseIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCourseIDActionPerformed
        // TODO add your handling code here:

        /*String courseID = jtfCourseID.getText().trim();

    if (courseID.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a course ID.", "Error", JOptionPane.ERROR_MESSAGE);
        errorMsg.setText(""); // Clear any previous error messages
        return;
    }
    
    

    boolean courseFound = false;

    for (int i = 0; i < courseList.getNumberOfEntries(); i++) {
        if (courseID.equals(courseList.getEntry(i + 1).getCourseID())) {
            courseFound = true;

            // Find the tutor and add the selected Course to it
            String selectedTutorName = TutorJcombo.getSelectedItem().toString(); // Get the selected Tutor name from the combo box
            boolean tutorFound = false;

            for (int j = 1; j <= tutorList.getNumberOfEntries(); j++) {
                Tutor tutor = tutorList.getEntry(j);
                if (selectedTutorName.equals(tutor.getTutorID())) {
                    tutorFound = true;
                    tutor.addCourse(courseList.getEntry(i + 1));
                    JOptionPane.showMessageDialog(this, "Tutor has been added to the course successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }

            if (!tutorFound) {
                JOptionPane.showMessageDialog(this, "Selected tutor not found.", "Error", JOptionPane.ERROR_MESSAGE);
            }

            break; // Exit the loop since the course is found
        }
    }

    if (!courseFound) {
        JOptionPane.showMessageDialog(this, "No such course found.", "Error", JOptionPane.ERROR_MESSAGE);
    } */
    }//GEN-LAST:event_jtfCourseIDActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String id = jtfCourseID.getText().trim();

        if (!id.isEmpty()) {
            errorMsg.setText(""); // Clear any previous error messages
            boolean found = false; // Flag to indicate if a matching course is found

            //for(int i =0; i< courseList.getNumberOfEntries(); i++){
            for (int i = 0; i < tutorialList.getNumberOfEntries(); i++) {
                if (id.equals(tutorialList.getEntry(i + 1).getGroupID())) {
                    //jtfCourseName.setText(courseList.getEntry(i + 1).getName());
                    errorMsg.setText(""); // Clear error message if found
                    found = true;
                    break; // Exit the loop since a match is found
                }
            }

            if (!found) {
                //jtfCourseName.setText("");
                errorMsg.setText("No such Course");
            }
        } else {
            errorMsg.setText("Please enter a course ID");
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void JcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcomboActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeachingAddTutorToTutorialGroup.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeachingAddTutorToTutorialGroup.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeachingAddTutorToTutorialGroup.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeachingAddTutorToTutorialGroup.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeachingAddTutorToTutorialGroup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConfirmButton;
    private javax.swing.JComboBox<String> Jcombo;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel errorMsg;
    private javax.swing.JLabel errorMsg1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jtfCourseID;
    private javax.swing.JLabel msg;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
