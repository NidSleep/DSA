/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package boundary.tutor;

import adt.AdtInterface;
import adt.ArrayList;
import entity.Programme;
import entity.Tutor;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PrinterException;
import javax.swing.*;
import utility.*;
import utility.insertData;

/**
 *
 * @author kenne
 */
public class tutorReport extends javax.swing.JFrame {

    public static AdtInterface<Tutor> tutorList = insertData.tutorList;
    public static AdtInterface<Programme> programmeList = insertData.programmeList;
    private final TutorSalaryComparator code = new TutorSalaryComparator();

    /**
     * Creates new form tutorAdd
     */
    public tutorReport() {

        initComponents();
//        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
//        Object rowData[] = new Object[5];
//
//        for (int i = 0; i < 10; i++) {
//            System.out.println("ranking[i] :" + ranking[i]);
//            rowData[0] = tutorList.getEntry(ranking[i]).getTutorID();
//            rowData[1] = tutorList.getEntry(ranking[i]).getName();
//            rowData[2] = "RM " + String.valueOf(tutorList.getEntry(ranking[i]).getSalary());
//            rowData[3] = "" + tutorList.getEntry(ranking[i]).getProgrammeID();
//            rowData[4] = "" + tutorList.getEntry(ranking[i]).getPosition();
//            model.addRow(rowData);
//        }
//
//        // Set the preferred scrollable viewport size to match the preferred size
//        jTable1.setPreferredScrollableViewportSize(jTable1.getPreferredSize());
//        jTable1.getTableHeader().setFont(new Font("SansSerif", Font.BOLD, 14));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1500, 800));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Top 10 Highest Salary ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 720, -1, -1));

        back.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 670, 140, 40));

        jButton1.setText("Sort By Salary");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 280, 200));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private int sortingOption = -1; // Default to no sorting

    private void sortByProgrammeIDButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // Sort the list based on Programme Code
        ArrayList.insertionSort(tutorList, code);

        // Generate the report text
        StringBuilder report = new StringBuilder();
        for (Tutor tutor : tutorList) {
            report.append("Tutor ID: ").append(tutor.getTutorID()).append("\n");
            report.append("Salary: RM ").append(tutor.getSalary()).append("\n");
            // Add more fields as needed
            report.append("\n");
        }

        // Create a new JFrame to display the report
        JFrame reportFrame = new JFrame("Salary Report");
        reportFrame.setSize(400, 200);
        reportFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Close only the report window when closed

        // Create a JTextArea to display the report
        JTextArea reportTextArea = new JTextArea();
        reportTextArea.setText(report.toString());
        reportTextArea.setWrapStyleWord(true);
        reportTextArea.setLineWrap(true);

        // Add the JTextArea to a JScrollPane for scrolling if needed
        JScrollPane scrollPane = new JScrollPane(reportTextArea);

        // Create a "Print" button
        JButton printButton = new JButton("Print");
        printButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Print the contents of the JTextArea
                try {
                    reportTextArea.print();
                } catch (PrinterException ex) {
                    ex.printStackTrace();
                }
            }
        });

        // Create a JPanel for the buttons
        JPanel buttonPanel = new JPanel();
        buttonPanel.add(printButton);

        // Add the scroll pane and button panel to the report frame
        reportFrame.add(scrollPane, BorderLayout.CENTER);
        reportFrame.add(buttonPanel, BorderLayout.SOUTH);
        // Set the size of the dialog (adjust as needed)
        reportFrame.setSize(400, 300);

        // Center the dialog on the screen
        reportFrame.setLocationRelativeTo(null);
        // Make the report frame visible
        reportFrame.setVisible(true);
    }

//    private void sortCourseList() {
//        double[] salary = new double[tutorList.getNumberOfEntries()];
//
//        for (int z = 0; z < tutorList.getNumberOfEntries(); z++) {
//            salary[z] = tutorList.getEntry(z + 1).getSalary();
//        }
//
//        // Create a mapping of values to their rankings
//        Map<Double, Integer> rankingMap = new HashMap<>();
//
//        // Sort the courseFee array in descending order while preserving original indices
//        Integer[] indices = new Integer[salary.length];
//        for (int i = 0; i < indices.length; i++) {
//            indices[i] = i;
//        }
//        Arrays.sort(indices, (a, b) -> Double.compare(salary[b], salary[a]));
//
//        // Create the ranking array based on the mapping
//        ranking = new int[salary.length];
//        for (int i = 0; i < indices.length; i++) {
//            ranking[i] = indices[i] + 1;
//        }
//
//        // Print the ranking array
//        System.out.print("Ranking: ");
//        for (int rank : ranking) {
//            System.out.print(rank + " ");
//        }
//
//    }

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        tutorUI t = new tutorUI();
        t.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        sortByProgrammeIDButtonActionPerformed(evt);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tutorReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tutorReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tutorReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tutorReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tutorReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
